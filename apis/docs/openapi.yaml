openapi: 3.0.0
info:
  title: Hacker News API Documentation
  description: Documentation for the Hacker News API
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: fywang021205@gmail.com
  license:
    name: MIT License
  version: v1
security:
  - Token: []
paths:
  /comments:
    get:
      operationId: comments_list
      description: Get all comments
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
      tags:
        - Comment
      security: []
    parameters: []
  /submissions:
    get:
      operationId: submissions_list
      description: Get all submissions
      parameters:
        - name: sort
          in: query
          description: Sort submissions by point or newest
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
        "400":
          description: Invalid sort parameter
      tags:
        - Submission
      security: []
    post:
      operationId: submissions_create
      description: Create a submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  description: Title of the submission
                  type: string
                url:
                  description: URL of the submission
                  type: string
                text:
                  description: Text of the submission
                  type: string
              example:
                title: titulo ejemplo
                url: https://www.youtube.com/
                text: texto ejemplo
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        "400":
          description: Validation errors
          content:
            application/json:
              examples:
                response:
                  value:
                    non_field_errors:
                      - Either 'url' or 'text' must be provided.
                    title:
                      - A submission with this title already exists.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
      tags:
        - Submission
    parameters: []
  /submissions/asks:
    get:
      operationId: submissions_asks_list
      description: Get all ASK submissions
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
      tags:
        - Submission
      security: []
    parameters: []
  "/submissions/{id}":
    get:
      operationId: submissions_read
      description: Get a submission
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        "404":
          description: No submission with such an ID.
      tags:
        - Submission
      security: []
    put:
      operationId: submissions_update
      description: Update a submission
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  description: Title of the submission
                  type: string
              example:
                title: Title Updated
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        "400":
          description: Validation errors
          content:
            application/json:
              examples:
                response:
                  value:
                    title:
                      - A submission with this title already exists.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - detail: Invalid token.
                    - detail: Invalid token header. No credentials provided.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No submission with such an ID.
      tags:
        - Submission
    delete:
      operationId: submissions_delete
      description: Delete a submission
      responses:
        "200":
          description: Submission deleted successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Submission deleted successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Invalid request.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - detail: Invalid token.
                    - detail: Invalid token header. No credentials provided.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No submission with such an ID.
      tags:
        - Submission
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/submissions/{id}/comments":
    post:
      operationId: submissions_comments_create
      description: Add a comment
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
              type: object
              properties:
                text:
                  description: Text of the comment
                  type: string
              example:
                text: Este es un comentario de prueba.
        required: true
      responses:
        "201":
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Validation error
        "401":
          description: Unauthorized
      tags:
        - Comment
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/submissions/{id}/favorite":
    post:
      operationId: submissions_favorite_create
      description: Favorite a submission
      responses:
        "200":
          description: Submission favorited successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Submission favorited successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have already favorited this submission.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No submission with such an ID.
      tags:
        - Submission
    delete:
      operationId: submissions_favorite_delete
      description: Unfavorite a submission
      responses:
        "200":
          description: Submission unfavorited successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Submission unfavorited successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have not favorited this submission yet.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No submission with such an ID.
      tags:
        - Submission
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/submissions/{id}/hide":
    post:
      operationId: submissions_hide_create
      description: Hide a submission
      responses:
        "200":
          description: Submission hidden successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Submission hidden successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have already hidden this submission.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No submission with such an ID.
      tags:
        - Submission
    delete:
      operationId: submissions_hide_delete
      description: Unhide a submission
      responses:
        "200":
          description: Submission unhidden successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Submission unhidden successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: This submission is not hidden.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No submission with such an ID.
      tags:
        - Submission
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/submissions/{id}/vote":
    post:
      operationId: submissions_vote_create
      description: Vote a submission
      responses:
        "200":
          description: Submission voted successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Submission voted successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have already voted for this submission.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You cannot vote for your own submission.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No submission with such an ID.
      tags:
        - Submission
    delete:
      operationId: submissions_vote_delete
      description: Delete a vote from a submission
      responses:
        "200":
          description: Vote removed successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Submission unvoted successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have not voted for this submission yet.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You cannot unvote your own submission.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No submission with such an ID.
      tags:
        - Submission
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/submissions/{submission_id}/comments/{comment_id}":
    get:
      operationId: submissions_comments_read
      description: Get a comment with all its replies
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "404":
          description: Not Found
      tags:
        - Comment
      security: []
    put:
      operationId: submissions_comments_update
      description: Edit a comment
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
              type: object
              properties:
                text:
                  description: Text of the comment
                  type: string
              example:
                text: Comentario editado.
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Validation error
        "401":
          description: Unauthorized
        "403":
          description: "Forbidden: You don't have permission to edit this comment."
        "404":
          description: Not Found
      tags:
        - Comment
    delete:
      operationId: submissions_comments_delete
      description: Delete a comment
      responses:
        "200":
          description: Comment deleted successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Comment deleted successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    error: Invalid request.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - detail: Invalid token.
                    - detail: Invalid token header. No credentials provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You do not have permission to delete this comment.
        "404":
          description: Not Found (Comment)
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No comment with such an ID.
      tags:
        - Comment
    parameters:
      - name: submission_id
        in: path
        required: true
        schema:
          type: string
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
  "/submissions/{submission_id}/comments/{comment_id}/favorite":
    post:
      operationId: submissions_comments_favorite_create
      description: Favorite a comment
      responses:
        "200":
          description: Comment favorited successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Comment favorited successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have already favorited this comment.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "404":
          description: Not Found (Comment)
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No comment with such an ID.
      tags:
        - Comment
    delete:
      operationId: submissions_comments_favorite_delete
      description: Unfavorite a comment
      responses:
        "200":
          description: Comment unfavorited successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Comment unfavorited successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have not favorited this comment yet.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "404":
          description: Not Found (Comment)
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No comment with such an ID.
      tags:
        - Comment
    parameters:
      - name: submission_id
        in: path
        required: true
        schema:
          type: string
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
  "/submissions/{submission_id}/comments/{comment_id}/reply":
    post:
      operationId: submissions_comments_reply_create
      description: Reply to a comment
      requestBody:
        content:
          application/json:
            schema:
              required:
                - text
              type: object
              properties:
                text:
                  description: Text of the comment
                  type: string
              example:
                text: This is a reply to the comment.
        required: true
      responses:
        "201":
          description: Reply created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "400":
          description: Validation error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Submission not found or Parent comment not found.
      tags:
        - Comment
    parameters:
      - name: submission_id
        in: path
        required: true
        schema:
          type: string
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
  "/submissions/{submission_id}/comments/{comment_id}/vote":
    post:
      operationId: submissions_comments_vote_create
      description: Vote a comment
      responses:
        "200":
          description: Comment voted successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Comment voted successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have already voted for this comment.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You cannot vote for your own comment.
        "404":
          description: Not Found (Comment)
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No comment with such an ID.
      tags:
        - Comment
    delete:
      operationId: submissions_comments_vote_delete
      description: Delete a vote from a comment
      responses:
        "200":
          description: Vote removed successfully
          content:
            application/json:
              examples:
                response:
                  value:
                    message: Comment unvoted successfully.
        "400":
          description: Bad Request
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You have not voted for this comment yet.
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - message: Invalid token.
                    - message: Invalid token header. No credentials provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You cannot unvote your own comment.
        "404":
          description: Not Found (Comment)
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No comment with such an ID.
      tags:
        - Comment
    parameters:
      - name: submission_id
        in: path
        required: true
        schema:
          type: string
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
  /threads:
    get:
      operationId: threads_list
      description: Get all threads
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Thread"
      tags:
        - Comment
    parameters: []
  "/users/{id}/profile":
    get:
      operationId: users_profile_list
      description: Get user profile
      responses:
        "200":
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile"
        "404":
          description: Profile not found
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: No Profile matches the given query.
        "500":
          description: Internal Server Error
      tags:
        - User
      security: []
    put:
      operationId: users_profile_update
      description: Update user profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileUpdate"
        required: true
      responses:
        "200":
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileUpdate"
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    - detail: Invalid token.
                    - detail: Authentication credentials were not provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    message: You do not have permission to edit this profile.
        "404":
          description: Not Found
          content:
            application/json:
              examples:
                response:
                  value:
                    message: No profile with such ID.
      tags:
        - User
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
  "/users/{user_id}/comments":
    get:
      operationId: users_comments_list
      description: Get user's comments
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "404":
          description: User not found
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: No User matches the given query.
      tags:
        - User
      security: []
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/users/{user_id}/comments/favorites":
    get:
      operationId: users_comments_favorites_list
      description: Get user's favorite comments
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "404":
          description: User not found
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: No User matches the given query.
      tags:
        - User
      security: []
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/users/{user_id}/comments/upvoted":
    get:
      operationId: users_comments_upvoted_list
      description: Get user's upvoted comments
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: Authentication credentials were not provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    error: You can only view your own upvoted comments
        "404":
          description: User not found
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: No User matches the given query.
      tags:
        - User
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/users/{user_id}/hidden":
    get:
      operationId: users_hidden_list
      description: Get user's hidden submissions
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: Authentication credentials were not provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    error: You do not have permission to view other users' hidden submissions.
      tags:
        - User
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/users/{user_id}/submissions":
    get:
      operationId: users_submissions_list
      description: Get user's submissions
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
        "404":
          description: User not found
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: No User matches the given query.
      tags:
        - User
      security: []
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/users/{user_id}/submissions/favorites":
    get:
      operationId: users_submissions_favorites_list
      description: Get user's favorite submissions
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
        "404":
          description: User not found
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: No User matches the given query.
      tags:
        - User
      security: []
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
  "/users/{user_id}/submissions/upvoted":
    get:
      operationId: users_submissions_upvoted_list
      description: Get user's upvoted submissions
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Submission"
        "401":
          description: Unauthorized
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: Authentication credentials were not provided.
        "403":
          description: Forbidden
          content:
            application/json:
              examples:
                response:
                  value:
                    error: You can only view your own upvoted submissions
        "404":
          description: User not found
          content:
            application/json:
              examples:
                response:
                  value:
                    detail: No User matches the given query.
      tags:
        - User
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
servers:
  - url: https://projecte-asw-cdd22f32d84c.herokuapp.com/api
    description: Production server
  - url: http://localhost:8000/api
    description: Development server
components:
  securitySchemes:
    Token:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Comment:
      required:
        - text
        - submission
        - author
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        text:
          title: Text
          type: string
          minLength: 1
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        level:
          title: Level
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
        point:
          title: Point
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
        submission:
          title: Submission
          type: integer
        parent:
          title: Parent
          type: integer
          nullable: true
        author:
          title: Author
          type: integer
        replies:
          title: Replies
          type: string
          readOnly: true
    Submission:
      required:
        - title
        - author
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Title
          type: string
          maxLength: 255
          minLength: 1
        url:
          title: Url
          type: string
          format: uri
          maxLength: 200
          nullable: true
        domain:
          title: Domain
          type: string
          maxLength: 255
          minLength: 1
          nullable: true
        text:
          title: Text
          type: string
          nullable: true
        point:
          title: Point
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
        comment_count:
          title: Comment count
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
        created:
          title: Created
          type: string
          format: date-time
          readOnly: true
        author:
          title: Author
          type: integer
        comments:
          title: Comments
          type: string
          readOnly: true
    Thread:
      required:
        - text
        - submission
        - author
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        text:
          title: Text
          type: string
          minLength: 1
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        level:
          title: Level
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
        point:
          title: Point
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
        submission:
          title: Submission
          type: integer
        parent:
          title: Parent
          type: integer
          nullable: true
        author:
          title: Author
          type: integer
    Profile:
      type: object
      properties:
        user_id:
          title: User id
          type: string
          readOnly: true
        username:
          title: Username
          type: string
          readOnly: true
          minLength: 1
        karma:
          title: Karma
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
        about:
          title: About
          type: string
          nullable: true
        banner:
          title: Banner
          type: string
          readOnly: true
          format: uri
          nullable: true
        avatar:
          title: Avatar
          type: string
          readOnly: true
          format: uri
          nullable: true
    ProfileUpdate:
      type: object
      properties:
        about:
          title: About
          type: string
          nullable: true
