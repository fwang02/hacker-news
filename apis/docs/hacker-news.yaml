swagger: '2.0'
info:
  title: Hacker News API Documentation
  description: Documentation for the Hacker News API
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: fywang021205@gmail.com
  license:
    name: MIT License
  version: v1
basePath: /api
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Token:
    type: apiKey
    name: Authorization
    in: header
security:
- Token: []
paths:
  /comments:
    get:
      operationId: comments_list
      description: Get all comments
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
      tags:
      - Comment
      security: []
    parameters: []
  /submissions:
    get:
      operationId: submissions_list
      description: Get all submissions
      parameters:
      - name: sort
        in: query
        description: Sort submissions by point or newest
        type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        '400':
          description: Invalid sort parameter
      tags:
      - Submission
      security: []
    post:
      operationId: submissions_create
      description: Create a submission
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: object
          properties:
            title:
              description: Title of the submission
              type: string
            url:
              description: URL of the submission
              type: string
            text:
              description: Text of the submission
              type: string
          example:
            title: titulo ejemplo
            url: https://www.youtube.com/
            text: texto ejemplo
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Submission'
        '400':
          description: Validation errors
          examples:
            application/json:
              non_field_errors:
              - Either 'url' or 'text' must be provided.
              title:
              - A submission with this title already exists.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
      tags:
      - Submission
    parameters: []
  /submissions/asks:
    get:
      operationId: submissions_asks_list
      description: Get all ASK submissions
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
      tags:
      - Submission
      security: []
    parameters: []
  /submissions/{id}:
    get:
      operationId: submissions_read
      description: Get a submission
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Submission'
        '404':
          description: No submission with such an ID.
      tags:
      - Submission
      security: []
    put:
      operationId: submissions_update
      description: Update a submission
      parameters:
      - name: data
        in: body
        required: true
        schema:
          type: object
          properties:
            title:
              description: Title of the submission
              type: string
          example:
            title: Title Updated
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Submission'
        '400':
          description: Validation errors
          examples:
            application/json:
              title:
              - A submission with this title already exists.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - detail: Invalid token.
            - detail: Invalid token header. No credentials provided.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No submission with such an ID.
      tags:
      - Submission
    delete:
      operationId: submissions_delete
      description: Delete a submission
      parameters: []
      responses:
        '200':
          description: Submission deleted successfully
          examples:
            application/json:
              message: Submission deleted successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              error: Invalid request.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - detail: Invalid token.
            - detail: Invalid token header. No credentials provided.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No submission with such an ID.
      tags:
      - Submission
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /submissions/{id}/comments:
    post:
      operationId: submissions_comments_create
      description: Add a comment
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - text
          type: object
          properties:
            text:
              description: Text of the comment
              type: string
          example:
            text: Este es un comentario de prueba.
      responses:
        '201':
          description: Comment created successfully
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
      tags:
      - Comment
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /submissions/{id}/favorite:
    post:
      operationId: submissions_favorite_create
      description: Favorite a submission
      parameters: []
      responses:
        '200':
          description: Submission favorited successfully
          examples:
            application/json:
              message: Submission favorited successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have already favorited this submission.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No submission with such an ID.
      tags:
      - Submission
    delete:
      operationId: submissions_favorite_delete
      description: Unfavorite a submission
      parameters: []
      responses:
        '200':
          description: Submission unfavorited successfully
          examples:
            application/json:
              message: Submission unfavorited successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have not favorited this submission yet.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No submission with such an ID.
      tags:
      - Submission
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /submissions/{id}/hide:
    post:
      operationId: submissions_hide_create
      description: Hide a submission
      parameters: []
      responses:
        '200':
          description: Submission hidden successfully
          examples:
            application/json:
              message: Submission hidden successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have already hidden this submission.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No submission with such an ID.
      tags:
      - Submission
    delete:
      operationId: submissions_hide_delete
      description: Unhide a submission
      parameters: []
      responses:
        '200':
          description: Submission unhidden successfully
          examples:
            application/json:
              message: Submission unhidden successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: This submission is not hidden.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No submission with such an ID.
      tags:
      - Submission
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /submissions/{id}/vote:
    post:
      operationId: submissions_vote_create
      description: Vote a submission
      parameters: []
      responses:
        '200':
          description: Submission voted successfully
          examples:
            application/json:
              message: Submission voted successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have already voted for this submission.
        '403':
          description: Forbidden
          examples:
            application/json:
              message: You cannot vote for your own submission.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No submission with such an ID.
      tags:
      - Submission
    delete:
      operationId: submissions_vote_delete
      description: Delete a vote from a submission
      parameters: []
      responses:
        '200':
          description: Vote removed successfully
          examples:
            application/json:
              message: Submission unvoted successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have not voted for this submission yet.
        '403':
          description: Forbidden
          examples:
            application/json:
              message: You cannot unvote your own submission.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No submission with such an ID.
      tags:
      - Submission
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /submissions/{submission_id}/comments/{comment_id}:
    get:
      operationId: submissions_comments_read
      description: Get a comment with all its replies
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
        '404':
          description: Not Found
      tags:
      - Comment
    put:
      operationId: submissions_comments_update
      description: Edit a comment
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - text
          type: object
          properties:
            text:
              description: Text of the comment
              type: string
          example:
            text: Comentario editado.
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: 'Forbidden: You don''t have permission to edit this comment.'
        '404':
          description: Not Found
      tags:
      - Comment
    delete:
      operationId: submissions_comments_delete
      description: Delete a comment
      parameters: []
      responses:
        '200':
          description: Comment deleted successfully
          examples:
            application/json:
              message: Comment deleted successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              error: Invalid request.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - detail: Invalid token.
            - detail: Invalid token header. No credentials provided.
        '403':
          description: Forbidden
          examples:
            application/json:
              message: You do not have permission to delete this comment.
        '404':
          description: Not Found (Comment)
          examples:
            application/json:
              message: No comment with such an ID.
      tags:
      - Comment
    parameters:
    - name: submission_id
      in: path
      required: true
      type: string
    - name: comment_id
      in: path
      required: true
      type: string
  /submissions/{submission_id}/comments/{comment_id}/favorite:
    post:
      operationId: submissions_comments_favorite_create
      description: Favorite a comment
      parameters: []
      responses:
        '200':
          description: Comment favorited successfully
          examples:
            application/json:
              message: Comment favorited successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have already favorited this comment.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found (Comment)
          examples:
            application/json:
              message: No comment with such an ID.
      tags:
      - Comment
    delete:
      operationId: submissions_comments_favorite_delete
      description: Unfavorite a comment
      parameters: []
      responses:
        '200':
          description: Comment unfavorited successfully
          examples:
            application/json:
              message: Comment unfavorited successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have not favorited this comment yet.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found (Comment)
          examples:
            application/json:
              message: No comment with such an ID.
      tags:
      - Comment
    parameters:
    - name: submission_id
      in: path
      required: true
      type: string
    - name: comment_id
      in: path
      required: true
      type: string
  /submissions/{submission_id}/comments/{comment_id}/reply:
    post:
      operationId: submissions_comments_reply_create
      description: Reply to a comment
      parameters:
      - name: data
        in: body
        required: true
        schema:
          required:
          - text
          type: object
          properties:
            text:
              description: Text of the comment
              type: string
          example:
            text: This is a reply to the comment.
      responses:
        '201':
          description: Reply created successfully
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          examples:
            application/json:
              message: Submission not found or Parent comment not found.
      tags:
      - Comment
    parameters:
    - name: submission_id
      in: path
      required: true
      type: string
    - name: comment_id
      in: path
      required: true
      type: string
  /submissions/{submission_id}/comments/{comment_id}/vote:
    post:
      operationId: submissions_comments_vote_create
      description: Vote a comment
      parameters: []
      responses:
        '200':
          description: Comment voted successfully
          examples:
            application/json:
              message: Comment voted successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have already voted for this comment.
        '403':
          description: Forbidden
          examples:
            application/json:
              message: You cannot vote for your own comment.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found (Comment)
          examples:
            application/json:
              message: No comment with such an ID.
      tags:
      - Comment
    delete:
      operationId: submissions_comments_vote_delete
      description: Delete a vote from a comment
      parameters: []
      responses:
        '200':
          description: Vote removed successfully
          examples:
            application/json:
              message: Comment unvoted successfully.
        '400':
          description: Bad Request
          examples:
            application/json:
              message: You have not voted for this comment yet.
        '403':
          description: Forbidden
          examples:
            application/json:
              message: You cannot unvote your own comment.
        '401':
          description: Unauthorized
          examples:
            application/json:
            - message: Invalid token.
            - message: Invalid token header. No credentials provided.
        '404':
          description: Not Found (Comment)
          examples:
            application/json:
              message: No comment with such an ID.
      tags:
      - Comment
    parameters:
    - name: submission_id
      in: path
      required: true
      type: string
    - name: comment_id
      in: path
      required: true
      type: string
  /threads:
    get:
      operationId: threads_list
      description: Get all threads
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Thread'
      tags:
      - Comment
    parameters: []
  /users/{id}/profile:
    get:
      operationId: users_profile_list
      description: Get user profile
      parameters: []
      responses:
        '200':
          description: Profile retrieved successfully
          schema:
            $ref: '#/definitions/Profile'
        '404':
          description: Profile not found
          examples:
            application/json:
              detail: No Profile matches the given query.
        '500':
          description: Internal Server Error
      tags:
      - User
      security: []
    put:
      operationId: users_profile_update
      description: Update user profile
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProfileUpdate'
      responses:
        '200':
          description: Profile updated successfully
          schema:
            $ref: '#/definitions/ProfileUpdate'
        '401':
          description: Unauthorized
          examples:
            application/json:
            - detail: Invalid token.
            - detail: Authentication credentials were not provided.
        '403':
          description: Forbidden
          examples:
            application/json:
              message: You do not have permission to edit this profile.
        '404':
          description: Not Found
          examples:
            application/json:
              message: No profile with such ID.
      tags:
      - User
    parameters:
    - name: id
      in: path
      required: true
      type: string
  /users/{user_id}/comments:
    get:
      operationId: users_comments_list
      description: Get user's comments
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
        '404':
          description: User not found
          examples:
            application/json:
              detail: No User matches the given query.
      tags:
      - User
      security: []
    parameters:
    - name: user_id
      in: path
      required: true
      type: string
  /users/{user_id}/comments/favorites:
    get:
      operationId: users_comments_favorites_list
      description: Get user's favorite comments
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
        '404':
          description: User not found
          examples:
            application/json:
              detail: No User matches the given query.
      tags:
      - User
      security: []
    parameters:
    - name: user_id
      in: path
      required: true
      type: string
  /users/{user_id}/comments/upvoted:
    get:
      operationId: users_comments_upvoted_list
      description: Get user's upvoted comments
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
        '401':
          description: Unauthorized
          examples:
            application/json:
              detail: Authentication credentials were not provided.
        '403':
          description: Forbidden
          examples:
            application/json:
              error: You can only view your own upvoted comments
        '404':
          description: User not found
          examples:
            application/json:
              detail: No User matches the given query.
      tags:
      - User
    parameters:
    - name: user_id
      in: path
      required: true
      type: string
  /users/{user_id}/hidden:
    get:
      operationId: users_hidden_list
      description: Get user's hidden submissions
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        '401':
          description: Unauthorized
          examples:
            application/json:
              detail: Authentication credentials were not provided.
        '403':
          description: Forbidden
          examples:
            application/json:
              error: You do not have permission to view other users' hidden submissions.
      tags:
      - User
    parameters:
    - name: user_id
      in: path
      required: true
      type: string
  /users/{user_id}/submissions:
    get:
      operationId: users_submissions_list
      description: Get user's submissions
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        '404':
          description: User not found
          examples:
            application/json:
              detail: No User matches the given query.
      tags:
      - User
      security: []
    parameters:
    - name: user_id
      in: path
      required: true
      type: string
  /users/{user_id}/submissions/favorites:
    get:
      operationId: users_submissions_favorites_list
      description: Get user's favorite submissions
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        '404':
          description: User not found
          examples:
            application/json:
              detail: No User matches the given query.
      tags:
      - User
      security: []
    parameters:
    - name: user_id
      in: path
      required: true
      type: string
  /users/{user_id}/submissions/upvoted:
    get:
      operationId: users_submissions_upvoted_list
      description: Get user's upvoted submissions
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        '401':
          description: Unauthorized
          examples:
            application/json:
              detail: Authentication credentials were not provided.
        '403':
          description: Forbidden
          examples:
            application/json:
              error: You can only view your own upvoted submissions
        '404':
          description: User not found
          examples:
            application/json:
              detail: No User matches the given query.
      tags:
      - User
    parameters:
    - name: user_id
      in: path
      required: true
      type: string
definitions:
  Comment:
    required:
    - text
    - submission
    - author
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      text:
        title: Text
        type: string
        minLength: 1
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      level:
        title: Level
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      point:
        title: Point
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      submission:
        title: Submission
        type: integer
      parent:
        title: Parent
        type: integer
        x-nullable: true
      author:
        title: Author
        type: integer
      replies:
        title: Replies
        type: string
        readOnly: true
  Submission:
    required:
    - title
    - author
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      title:
        title: Title
        type: string
        maxLength: 255
        minLength: 1
      url:
        title: Url
        type: string
        format: uri
        maxLength: 200
        x-nullable: true
      domain:
        title: Domain
        type: string
        maxLength: 255
        minLength: 1
        x-nullable: true
      text:
        title: Text
        type: string
        x-nullable: true
      point:
        title: Point
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      comment_count:
        title: Comment count
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      created:
        title: Created
        type: string
        format: date-time
        readOnly: true
      author:
        title: Author
        type: integer
      comments:
        title: Comments
        type: string
        readOnly: true
  Thread:
    required:
    - text
    - submission
    - author
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      text:
        title: Text
        type: string
        minLength: 1
      created_at:
        title: Created at
        type: string
        format: date-time
        readOnly: true
      level:
        title: Level
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      point:
        title: Point
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      submission:
        title: Submission
        type: integer
      parent:
        title: Parent
        type: integer
        x-nullable: true
      author:
        title: Author
        type: integer
  Profile:
    type: object
    properties:
      user_id:
        title: User id
        type: string
        readOnly: true
      username:
        title: Username
        type: string
        readOnly: true
        minLength: 1
      karma:
        title: Karma
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      about:
        title: About
        type: string
        x-nullable: true
      banner:
        title: Banner
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      avatar:
        title: Avatar
        type: string
        readOnly: true
        x-nullable: true
        format: uri
  ProfileUpdate:
    type: object
    properties:
      about:
        title: About
        type: string
        x-nullable: true
